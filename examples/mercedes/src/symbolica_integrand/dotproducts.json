{
	"sp1":"ke1x^2 + ke1y^2 + ke1z^2",
	"sp2":"ke1x^2 + ke1y^2 + ke1z^2 - ke1x*ke2x - ke1y*ke2y - ke1z*ke2z",
	"sp3":"ke1x*ke2x + ke1y*ke2y + ke1z*ke2z",
	"sp4":"-ke1x^2 - ke1y^2 - ke1z^2 + ke1x*ke2x + ke1y*ke2y + ke1z*ke2z",
	"sp5":"ke1x^2 + ke1y^2 + ke1z^2 - ke1x*ke3x - ke1y*ke3y - ke1z*ke3z",
	"sp6":"ke1x*ke2x + ke1y*ke2y + ke1z*ke2z - ke1x*ke3x - ke1y*ke3y - ke1z*ke3z",
	"sp7":"ke1x*ke3x + ke1y*ke3y + ke1z*ke3z",
	"sp8":"-ke1x^2 - ke1y^2 - ke1z^2 + ke1x*ke3x + ke1y*ke3y + ke1z*ke3z",
	"sp9":"-(ke1x*ke2x) - ke1y*ke2y - ke1z*ke2z + ke1x*ke3x + ke1y*ke3y + ke1z*ke3z",
	"sp10":"ke1x*ke2x - ke2x^2 + ke1y*ke2y - ke2y^2 + ke1z*ke2z - ke2z^2",
	"sp11":"ke1x^2 + ke1y^2 + ke1z^2 - ke1x*ke2x - ke1y*ke2y - ke1z*ke2z - ke1x*ke3x + ke2x*ke3x - ke1y*ke3y + ke2y*ke3y - ke1z*ke3z + ke2z*ke3z",
	"sp12":"ke1x*ke2x - ke2x^2 + ke1y*ke2y - ke2y^2 + ke1z*ke2z - ke2z^2 - ke1x*ke3x + ke2x*ke3x - ke1y*ke3y + ke2y*ke3y - ke1z*ke3z + ke2z*ke3z",
	"sp13":"ke1x*ke3x - ke2x*ke3x + ke1y*ke3y - ke2y*ke3y + ke1z*ke3z - ke2z*ke3z",
	"sp14":"-(ke1x*ke2x) + ke2x^2 - ke1y*ke2y + ke2y^2 - ke1z*ke2z + ke2z^2 + ke1x*ke3x - ke2x*ke3x + ke1y*ke3y - ke2y*ke3y + ke1z*ke3z - ke2z*ke3z",
	"sp15":"ke2x^2 + ke2y^2 + ke2z^2",
	"sp16":"ke1x*ke2x + ke1y*ke2y + ke1z*ke2z - ke2x*ke3x - ke2y*ke3y - ke2z*ke3z",
	"sp17":"ke2x^2 + ke2y^2 + ke2z^2 - ke2x*ke3x - ke2y*ke3y - ke2z*ke3z",
	"sp18":"ke2x*ke3x + ke2y*ke3y + ke2z*ke3z",
	"sp19":"-ke2x^2 - ke2y^2 - ke2z^2 + ke2x*ke3x + ke2y*ke3y + ke2z*ke3z",
	"sp20":"ke1x^2 + ke1y^2 + ke1z^2 + ke2x^2 + ke2y^2 + ke2z^2 - 2*(ke1x*ke2x + ke1y*ke2y + ke1z*ke2z)",
	"sp21":"-(ke1x*ke2x) + ke2x^2 - ke1y*ke2y + ke2y^2 - ke1z*ke2z + ke2z^2 + ke1x*ke3x - ke2x*ke3x + ke1y*ke3y - ke2y*ke3y + ke1z*ke3z - ke2z*ke3z",
	"sp22":"ke1x^2 + ke1y^2 + ke1z^2 - ke1x*ke2x - ke1y*ke2y - ke1z*ke2z - ke1x*ke3x + ke2x*ke3x - ke1y*ke3y + ke2y*ke3y - ke1z*ke3z + ke2z*ke3z",
	"sp23":"ke1x*ke2x - ke2x^2 + ke1y*ke2y - ke2y^2 + ke1z*ke2z - ke2z^2 - ke1x*ke3x + ke2x*ke3x - ke1y*ke3y + ke2y*ke3y - ke1z*ke3z + ke2z*ke3z",
	"sp24":"ke1x*ke2x + ke1y*ke2y + ke1z*ke2z - ke1x*ke3x - ke2x*ke3x + ke3x^2 - ke1y*ke3y - ke2y*ke3y + ke3y^2 - ke1z*ke3z - ke2z*ke3z + ke3z^2",
	"sp25":"ke1x*ke3x - ke3x^2 + ke1y*ke3y - ke3y^2 + ke1z*ke3z - ke3z^2",
	"sp26":"-(ke1x*ke2x) - ke1y*ke2y - ke1z*ke2z + ke1x*ke3x + ke2x*ke3x - ke3x^2 + ke1y*ke3y + ke2y*ke3y - ke3y^2 + ke1z*ke3z + ke2z*ke3z - ke3z^2",
	"sp27":"ke2x*ke3x - ke3x^2 + ke2y*ke3y - ke3y^2 + ke2z*ke3z - ke3z^2",
	"sp28":"-(ke1x*ke2x) - ke1y*ke2y - ke1z*ke2z + ke1x*ke3x + ke2x*ke3x - ke3x^2 + ke1y*ke3y + ke2y*ke3y - ke3y^2 + ke1z*ke3z + ke2z*ke3z - ke3z^2",
	"sp29":"ke3x^2 + ke3y^2 + ke3z^2",
	"sp30":"-(ke2x*ke3x) + ke3x^2 - ke2y*ke3y + ke3y^2 - ke2z*ke3z + ke3z^2",
	"sp31":"ke1x^2 + ke1y^2 + ke1z^2 + ke3x^2 + ke3y^2 + ke3z^2 - 2*(ke1x*ke3x + ke1y*ke3y + ke1z*ke3z)",
	"sp32":"ke2x^2 + ke2y^2 + ke2z^2 + ke3x^2 + ke3y^2 + ke3z^2 - 2*(ke2x*ke3x + ke2y*ke3y + ke2z*ke3z)"
}